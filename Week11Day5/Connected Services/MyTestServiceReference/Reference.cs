//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyTestServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://worldline.com/myservices", ConfigurationName="MyTestServiceReference.WeatherForecastSoap")]
    public interface WeatherForecastSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://worldline.com/myservices/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<MyTestServiceReference.HelloWorldResponse> HelloWorldAsync(MyTestServiceReference.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://worldline.com/myservices/WelcomeMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<MyTestServiceReference.WelcomeMessageResponse> WelcomeMessageAsync(MyTestServiceReference.WelcomeMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://worldline.com/myservices/GetRainForecastForCity", ReplyAction="*")]
        System.Threading.Tasks.Task<MyTestServiceReference.GetRainForecastForCityResponse> GetRainForecastForCityAsync(MyTestServiceReference.GetRainForecastForCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://worldline.com/myservices/GetHumidityForCity", ReplyAction="*")]
        System.Threading.Tasks.Task<MyTestServiceReference.GetHumidityForCityResponse> GetHumidityForCityAsync(MyTestServiceReference.GetHumidityForCityRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.HelloWorldRequestBody Body;
        
        public HelloWorldRequest()
        {
        }
        
        public HelloWorldRequest(MyTestServiceReference.HelloWorldRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HelloWorldRequestBody
    {
        
        public HelloWorldRequestBody()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.HelloWorldResponseBody Body;
        
        public HelloWorldResponse()
        {
        }
        
        public HelloWorldResponse(MyTestServiceReference.HelloWorldResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://worldline.com/myservices")]
    public partial class HelloWorldResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody()
        {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult)
        {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WelcomeMessageRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="WelcomeMessage", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.WelcomeMessageRequestBody Body;
        
        public WelcomeMessageRequest()
        {
        }
        
        public WelcomeMessageRequest(MyTestServiceReference.WelcomeMessageRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://worldline.com/myservices")]
    public partial class WelcomeMessageRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string name;
        
        public WelcomeMessageRequestBody()
        {
        }
        
        public WelcomeMessageRequestBody(string name)
        {
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WelcomeMessageResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="WelcomeMessageResponse", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.WelcomeMessageResponseBody Body;
        
        public WelcomeMessageResponse()
        {
        }
        
        public WelcomeMessageResponse(MyTestServiceReference.WelcomeMessageResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://worldline.com/myservices")]
    public partial class WelcomeMessageResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string WelcomeMessageResult;
        
        public WelcomeMessageResponseBody()
        {
        }
        
        public WelcomeMessageResponseBody(string WelcomeMessageResult)
        {
            this.WelcomeMessageResult = WelcomeMessageResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRainForecastForCityRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRainForecastForCity", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.GetRainForecastForCityRequestBody Body;
        
        public GetRainForecastForCityRequest()
        {
        }
        
        public GetRainForecastForCityRequest(MyTestServiceReference.GetRainForecastForCityRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://worldline.com/myservices")]
    public partial class GetRainForecastForCityRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cityName;
        
        public GetRainForecastForCityRequestBody()
        {
        }
        
        public GetRainForecastForCityRequestBody(string cityName)
        {
            this.cityName = cityName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRainForecastForCityResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRainForecastForCityResponse", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.GetRainForecastForCityResponseBody Body;
        
        public GetRainForecastForCityResponse()
        {
        }
        
        public GetRainForecastForCityResponse(MyTestServiceReference.GetRainForecastForCityResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://worldline.com/myservices")]
    public partial class GetRainForecastForCityResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetRainForecastForCityResult;
        
        public GetRainForecastForCityResponseBody()
        {
        }
        
        public GetRainForecastForCityResponseBody(string GetRainForecastForCityResult)
        {
            this.GetRainForecastForCityResult = GetRainForecastForCityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHumidityForCityRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHumidityForCity", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.GetHumidityForCityRequestBody Body;
        
        public GetHumidityForCityRequest()
        {
        }
        
        public GetHumidityForCityRequest(MyTestServiceReference.GetHumidityForCityRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://worldline.com/myservices")]
    public partial class GetHumidityForCityRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string cityName;
        
        public GetHumidityForCityRequestBody()
        {
        }
        
        public GetHumidityForCityRequestBody(string cityName)
        {
            this.cityName = cityName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHumidityForCityResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHumidityForCityResponse", Namespace="http://worldline.com/myservices", Order=0)]
        public MyTestServiceReference.GetHumidityForCityResponseBody Body;
        
        public GetHumidityForCityResponse()
        {
        }
        
        public GetHumidityForCityResponse(MyTestServiceReference.GetHumidityForCityResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://worldline.com/myservices")]
    public partial class GetHumidityForCityResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double GetHumidityForCityResult;
        
        public GetHumidityForCityResponseBody()
        {
        }
        
        public GetHumidityForCityResponseBody(double GetHumidityForCityResult)
        {
            this.GetHumidityForCityResult = GetHumidityForCityResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface WeatherForecastSoapChannel : MyTestServiceReference.WeatherForecastSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class WeatherForecastSoapClient : System.ServiceModel.ClientBase<MyTestServiceReference.WeatherForecastSoap>, MyTestServiceReference.WeatherForecastSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WeatherForecastSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(WeatherForecastSoapClient.GetBindingForEndpoint(endpointConfiguration), WeatherForecastSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WeatherForecastSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WeatherForecastSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WeatherForecastSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WeatherForecastSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WeatherForecastSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyTestServiceReference.HelloWorldResponse> MyTestServiceReference.WeatherForecastSoap.HelloWorldAsync(MyTestServiceReference.HelloWorldRequest request)
        {
            return base.Channel.HelloWorldAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyTestServiceReference.HelloWorldResponse> HelloWorldAsync()
        {
            MyTestServiceReference.HelloWorldRequest inValue = new MyTestServiceReference.HelloWorldRequest();
            inValue.Body = new MyTestServiceReference.HelloWorldRequestBody();
            return ((MyTestServiceReference.WeatherForecastSoap)(this)).HelloWorldAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyTestServiceReference.WelcomeMessageResponse> MyTestServiceReference.WeatherForecastSoap.WelcomeMessageAsync(MyTestServiceReference.WelcomeMessageRequest request)
        {
            return base.Channel.WelcomeMessageAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyTestServiceReference.WelcomeMessageResponse> WelcomeMessageAsync(string name)
        {
            MyTestServiceReference.WelcomeMessageRequest inValue = new MyTestServiceReference.WelcomeMessageRequest();
            inValue.Body = new MyTestServiceReference.WelcomeMessageRequestBody();
            inValue.Body.name = name;
            return ((MyTestServiceReference.WeatherForecastSoap)(this)).WelcomeMessageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyTestServiceReference.GetRainForecastForCityResponse> MyTestServiceReference.WeatherForecastSoap.GetRainForecastForCityAsync(MyTestServiceReference.GetRainForecastForCityRequest request)
        {
            return base.Channel.GetRainForecastForCityAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyTestServiceReference.GetRainForecastForCityResponse> GetRainForecastForCityAsync(string cityName)
        {
            MyTestServiceReference.GetRainForecastForCityRequest inValue = new MyTestServiceReference.GetRainForecastForCityRequest();
            inValue.Body = new MyTestServiceReference.GetRainForecastForCityRequestBody();
            inValue.Body.cityName = cityName;
            return ((MyTestServiceReference.WeatherForecastSoap)(this)).GetRainForecastForCityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyTestServiceReference.GetHumidityForCityResponse> MyTestServiceReference.WeatherForecastSoap.GetHumidityForCityAsync(MyTestServiceReference.GetHumidityForCityRequest request)
        {
            return base.Channel.GetHumidityForCityAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyTestServiceReference.GetHumidityForCityResponse> GetHumidityForCityAsync(string cityName)
        {
            MyTestServiceReference.GetHumidityForCityRequest inValue = new MyTestServiceReference.GetHumidityForCityRequest();
            inValue.Body = new MyTestServiceReference.GetHumidityForCityRequestBody();
            inValue.Body.cityName = cityName;
            return ((MyTestServiceReference.WeatherForecastSoap)(this)).GetHumidityForCityAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WeatherForecastSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.WeatherForecastSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WeatherForecastSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:44320/WeatherForecast.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.WeatherForecastSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:44320/WeatherForecast.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            WeatherForecastSoap,
            
            WeatherForecastSoap12,
        }
    }
}
